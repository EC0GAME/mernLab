{"ast":null,"code":"var _jsxFileName = \"/Users/eco_game/cards/frontend/src/components/Login.js\",\n  _s = $RefreshSig$();\n// yah momma\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s();\n  const app_name = 'cop4331-9-19-2023-ed38a9ffe472';\n  function buildPath(route) {\n    if (process.env.NODE_ENV === 'production') {\n      return 'https://' + app_name + '.herokuapp.com/' + route;\n    } else {\n      return 'http://localhost:5000/' + route;\n    }\n  }\n  var loginName;\n  var loginPassword;\n  const [message, setMessage] = useState('');\n  const doLogin = async event => {\n    event.preventDefault();\n    var obj = {\n      login: loginName.value,\n      password: loginPassword.value\n    };\n    var js = JSON.stringify(obj);\n    try {\n      const response = await fetch('http://localhost:5001/api/login', {\n        method: 'POST',\n        body: js,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      var res = JSON.parse(await response.text());\n      if (res.id <= 0) {\n        setMessage('User/Password combination incorrect');\n      } else {\n        var user = {\n          firstName: res.firstName,\n          lastName: res.lastName,\n          id: res.id\n        };\n        localStorage.setItem('user_data', JSON.stringify(user));\n        setMessage('');\n        window.location.href = '/cards';\n      }\n    } catch (e) {\n      alert(e.toString());\n      return;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"loginDiv\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      id: \"inner-title\",\n      children: \"PLEASE LOG IN\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 50\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"loginName\",\n      placeholder: \"Username\",\n      ref: c => loginName = c\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      id: \"loginPassword\",\n      placeholder: \"Password\",\n      ref: c => loginPassword = c\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      id: \"loginButton\",\n      class: \"buttons\",\n      value: \"Do It\",\n      onClick: doLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      id: \"loginResult\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"tYaLAwkLc77MHDU2+aT1QEgoWAk=\");\n_c = Login;\n;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Login","_s","app_name","buildPath","route","process","env","NODE_ENV","loginName","loginPassword","message","setMessage","doLogin","event","preventDefault","obj","login","value","password","js","JSON","stringify","response","fetch","method","body","headers","res","parse","text","id","user","firstName","lastName","localStorage","setItem","window","location","href","e","alert","toString","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","ref","c","class","onClick","_c","$RefreshReg$"],"sources":["/Users/eco_game/cards/frontend/src/components/Login.js"],"sourcesContent":["// yah momma\nimport React, { useState } from 'react';\n\nexport default function Login()\n{\n  const app_name = 'cop4331-9-19-2023-ed38a9ffe472'\n  function buildPath(route)\n  {\n    if (process.env.NODE_ENV === 'production')\n    {\n      return 'https://' + app_name + '.herokuapp.com/' + route;\n    }\n    else\n    {\n      return 'http://localhost:5000/' + route;\n    }\n  }\n  var loginName;\n  var loginPassword;\n  const [message,setMessage] = useState('');\n  const doLogin = async event =>\n  {\n    event.preventDefault();\n    var obj = {login:loginName.value,password:loginPassword.value};\n    var js = JSON.stringify(obj);\n    try\n    {\n      const response = await fetch('http://localhost:5001/api/login',\n      {method:'POST',body:js,headers:{'Content-Type':\n      'application/json'}});\n      var res = JSON.parse(await response.text());\n      if( res.id <= 0 )\n      {\n        setMessage('User/Password combination incorrect');\n      }\n      else\n      {\n        var user =\n        {firstName:res.firstName,lastName:res.lastName,id:res.id}\n        localStorage.setItem('user_data', JSON.stringify(user));\n        setMessage('');\n        window.location.href = '/cards';\n      }\n    }\n    catch(e)\n    {\n      alert(e.toString());\n      return;\n    }\n  };\n\n  return(\n    <div id=\"loginDiv\">\n      <span id=\"inner-title\">PLEASE LOG IN</span><br />\n      <input type=\"text\" id=\"loginName\" placeholder=\"Username\" ref={(c) => loginName = c} />\n      <input type=\"password\" id=\"loginPassword\" placeholder=\"Password\" ref={(c) => loginPassword = c} />\n      <input type=\"submit\" id=\"loginButton\" class=\"buttons\" value = \"Do It\"\n        onClick={doLogin} />\n      <span id=\"loginResult\">{message}</span>\n    </div>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}